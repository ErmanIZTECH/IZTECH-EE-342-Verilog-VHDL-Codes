/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("SCin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PDout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PDout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDout";
}

SIGNAL("PDready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SDin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Count";
}

SIGNAL("Count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Count";
}

SIGNAL("Count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Count";
}

SIGNAL("Count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Count";
}

TRANSITION_LIST("SCin")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("PDout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("PDout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 483.607;
		LEVEL 1 FOR 299.056;
		LEVEL 0 FOR 400.944;
		LEVEL 1 FOR 816.393;
	}
}

TRANSITION_LIST("PDout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 483.343;
		LEVEL 1 FOR 299.311;
		LEVEL 0 FOR 400.689;
		LEVEL 1 FOR 816.657;
	}
}

TRANSITION_LIST("PDout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 383.09;
		LEVEL 1 FOR 0.616;
		LEVEL 0 FOR 699.384;
		LEVEL 1 FOR 0.616;
		LEVEL 0 FOR 916.294;
	}
}

TRANSITION_LIST("PDout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 484.149;
		LEVEL 1 FOR 300.258;
		LEVEL 0 FOR 1215.593;
	}
}

TRANSITION_LIST("PDout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1183.124;
		LEVEL 1 FOR 816.876;
	}
}

TRANSITION_LIST("PDout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 484.903;
		LEVEL 1 FOR 299.621;
		LEVEL 0 FOR 1215.476;
	}
}

TRANSITION_LIST("PDout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1183.128;
		LEVEL 1 FOR 816.872;
	}
}

TRANSITION_LIST("PDready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 482.134;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 650.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 767.866;
	}
}

TRANSITION_LIST("SDin")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.568;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 818.432;
	}
}

TRANSITION_LIST("Count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77.954;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1122.046;
	}
}

TRANSITION_LIST("Count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 922.046;
	}
}

TRANSITION_LIST("Count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.954;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 822.046;
	}
}

TRANSITION_LIST("Count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77.954;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 250.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 772.046;
	}
}

DISPLAY_LINE
{
	CHANNEL = "SCin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PDout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "Count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

TIME_BAR
{
	TIME = 14950;
	MASTER = TRUE;
}
;
