/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000.0;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ClkIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PDataIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PDataIn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("PDataIn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "PDataIn";
}

SIGNAL("Ready")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PDataOut")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PDataOut[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("PDataOut[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PDataOut";
}

SIGNAL("Send")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SerRX:Rx1|Count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("SerRX:Rx1|Count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "SerRX:Rx1|Count";
}

SIGNAL("SerRX:Rx1|Count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "SerRX:Rx1|Count";
}

SIGNAL("SerRX:Rx1|Count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "SerRX:Rx1|Count";
}

SIGNAL("SerRX:Rx1|Count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "SerRX:Rx1|Count";
}

TRANSITION_LIST("ClkIn")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 42;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 34;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("PDataIn[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("PDataIn[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 530.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 1840.0;
	}
}

TRANSITION_LIST("PDataIn[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("PDataIn[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 3450.0;
	}
}

TRANSITION_LIST("PDataIn[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1030.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 1840.0;
	}
}

TRANSITION_LIST("PDataIn[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 950.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1030.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 1840.0;
	}
}

TRANSITION_LIST("PDataIn[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1530.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 1840.0;
	}
}

TRANSITION_LIST("PDataIn[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 950.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 2450.0;
	}
}

TRANSITION_LIST("Ready")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 481.844;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 450.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1368.156;
	}
}

TRANSITION_LIST("PDataOut[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("PDataOut[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 484.563;
		LEVEL 1 FOR 3515.437;
	}
}

TRANSITION_LIST("PDataOut[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("PDataOut[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 984.955;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 2515.045;
	}
}

TRANSITION_LIST("PDataOut[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1485.376;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1414.624;
	}
}

TRANSITION_LIST("PDataOut[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 486.797;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1413.203;
	}
}

TRANSITION_LIST("PDataOut[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 986.427;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 1413.573;
	}
}

TRANSITION_LIST("PDataOut[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 485.185;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 1414.815;
	}
}

TRANSITION_LIST("Send")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 450.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 450.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 530.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 1840.0;
	}
}

TRANSITION_LIST("SerRX:Rx1|Count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77.992;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1722.008;
	}
}

TRANSITION_LIST("SerRX:Rx1|Count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.992;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1522.008;
	}
}

TRANSITION_LIST("SerRX:Rx1|Count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 177.992;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1422.008;
	}
}

TRANSITION_LIST("SerRX:Rx1|Count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 77.992;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 1372.008;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ClkIn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Send";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PDataIn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Ready";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "PDataOut[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "SerRX:Rx1|Count";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "SerRX:Rx1|Count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "SerRX:Rx1|Count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "SerRX:Rx1|Count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "SerRX:Rx1|Count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

TIME_BAR
{
	TIME = 14950;
	MASTER = TRUE;
}
;
